//----------------------
// <auto-generated>
// </auto-generated>
//----------------------


namespace MyNamespace
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Only ever has 2 items
    /// </summary>
    public partial class InnerList : System.Tuple<int, int>
    {
        public InnerList(int item1, int item2) : base(item1, item2)
        {
        }


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class OuterList : System.Collections.ObjectModel.Collection<InnerList>
    {

    }

    public partial class MyClass
    {

        [Newtonsoft.Json.JsonProperty("OuterList", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public OuterList OuterList { get; set; } = new OuterList();

    }
}