//----------------------
// <auto-generated>
// </auto-generated>
//----------------------


namespace MyNamespace
{
    #pragma warning disable // Disable all warnings

    public partial class Foo
    {

        [Newtonsoft.Json.JsonProperty("myProperty", Required = Newtonsoft.Json.Required.AllowNull)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public FooMyProperty? MyProperty { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.Flags]
    public enum FooMyProperty
    {

        [System.Runtime.Serialization.EnumMember(Value = @"value1")]
        Value1 = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"value2")]
        Value2 = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"value3")]
        Value3 = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 8,


    }
}