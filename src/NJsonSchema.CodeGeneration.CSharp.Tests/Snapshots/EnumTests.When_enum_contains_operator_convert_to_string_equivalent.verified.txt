//----------------------
// <auto-generated>
// </auto-generated>
//----------------------


namespace MyNamespace
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// The operator between the field and operand.
    /// </summary>
    public enum OperatorTestEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"=")]
        Eq = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"!=")]
        Ne = 1,


        [System.Runtime.Serialization.EnumMember(Value = @">")]
        Gt = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"<")]
        Lt = 3,


        [System.Runtime.Serialization.EnumMember(Value = @">=")]
        Ge = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"<=")]
        Le = 5,


        [System.Runtime.Serialization.EnumMember(Value = @"in")]
        In = 6,


        [System.Runtime.Serialization.EnumMember(Value = @"not in")]
        Not_in = 7,


        [System.Runtime.Serialization.EnumMember(Value = @"~=")]
        Approx = 9,


        [System.Runtime.Serialization.EnumMember(Value = @"is")]
        Is = 10,


        [System.Runtime.Serialization.EnumMember(Value = @"is not")]
        Is_not = 11,


    }

    public partial class Foo
    {
        [Newtonsoft.Json.JsonProperty("foo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OperatorTestEnum? Foo1 { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }
}