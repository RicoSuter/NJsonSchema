//----------------------
// <auto-generated>
// </auto-generated>
//----------------------







export class MyClass implements IMyClass {
    myDate!: moment.Moment;
    myTimeSpan!: moment.Duration;

    [key: string]: any;

    constructor(data?: IMyClass) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (this as any)[property] = (data as any)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            for (var property in _data) {
                if (_data.hasOwnProperty(property))
                    this[property] = _data[property];
            }
            this.myDate = _data["myDate"] ? moment.parseZone(_data["myDate"].toString()) : undefined as any;
            this.myTimeSpan = _data["myTimeSpan"] ? moment.duration(_data["myTimeSpan"].toString()) : undefined as any;
        }
    }

    static fromJS(data: any): MyClass {
        data = typeof data === 'object' ? data : {};
        let result = new MyClass();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        for (var property in this) {
            if (this.hasOwnProperty(property))
                data[property] = this[property];
        }
        data["myDate"] = this.myDate ? this.myDate.format('YYYY-MM-DD') : undefined as any;
        data["myTimeSpan"] = this.myTimeSpan ? this.myTimeSpan.format('d.hh:mm:ss.SS', { trim: false }) : undefined as any;
        return data;
    }
}

export interface IMyClass {
    myDate: moment.Moment;
    myTimeSpan: moment.Duration;

    [key: string]: any;
}