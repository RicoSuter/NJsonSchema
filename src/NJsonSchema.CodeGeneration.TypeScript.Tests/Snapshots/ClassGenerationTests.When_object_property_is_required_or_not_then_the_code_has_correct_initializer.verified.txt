//----------------------
// <auto-generated>
// </auto-generated>
//----------------------







export class MyClass implements IMyClass {
    a!: A;
    b!: B | undefined;

    [key: string]: any;

    constructor(data?: IMyClass) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (this as any)[property] = (data as any)[property];
            }
        }
        if (!data) {
            this.a = new A();
        }
    }

    init(_data?: any) {
        if (_data) {
            for (var property in _data) {
                if (_data.hasOwnProperty(property))
                    this[property] = _data[property];
            }
            this.a = _data["A"] ? A.fromJS(_data["A"]) : new A();
            this.b = _data["B"] ? B.fromJS(_data["B"]) : undefined as any;
        }
    }

    static fromJS(data: any): MyClass {
        data = typeof data === 'object' ? data : {};
        let result = new MyClass();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        for (var property in this) {
            if (this.hasOwnProperty(property))
                data[property] = this[property];
        }
        data["A"] = this.a ? this.a.toJSON() : undefined as any;
        data["B"] = this.b ? this.b.toJSON() : undefined as any;
        return data;
    }
}

export interface IMyClass {
    a: A;
    b: B | undefined;

    [key: string]: any;
}

export class A implements IA {
    a!: string | undefined;

    [key: string]: any;

    constructor(data?: IA) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (this as any)[property] = (data as any)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            for (var property in _data) {
                if (_data.hasOwnProperty(property))
                    this[property] = _data[property];
            }
            this.a = _data["A"];
        }
    }

    static fromJS(data: any): A {
        data = typeof data === 'object' ? data : {};
        let result = new A();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        for (var property in this) {
            if (this.hasOwnProperty(property))
                data[property] = this[property];
        }
        data["A"] = this.a;
        return data;
    }
}

export interface IA {
    a: string | undefined;

    [key: string]: any;
}

export class B implements IB {
    a!: string | undefined;

    [key: string]: any;

    constructor(data?: IB) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (this as any)[property] = (data as any)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            for (var property in _data) {
                if (_data.hasOwnProperty(property))
                    this[property] = _data[property];
            }
            this.a = _data["A"];
        }
    }

    static fromJS(data: any): B {
        data = typeof data === 'object' ? data : {};
        let result = new B();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        for (var property in this) {
            if (this.hasOwnProperty(property))
                data[property] = this[property];
        }
        data["A"] = this.a;
        return data;
    }
}

export interface IB {
    a: string | undefined;

    [key: string]: any;
}