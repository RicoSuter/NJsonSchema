//----------------------
// <auto-generated>
// </auto-generated>
//----------------------







export class MyFile implements IMyFile {
    color!: MyFileColor;

    [key: string]: any;

    constructor(data?: IMyFile) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (this as any)[property] = (data as any)[property];
            }
        }
        if (!data) {
            this.color = "green";
        }
    }

    init(_data?: any) {
        if (_data) {
            for (var property in _data) {
                if (_data.hasOwnProperty(property))
                    this[property] = _data[property];
            }
            this.color = _data["color"] !== undefined ? _data["color"] : "green";
        }
    }

    static fromJS(data: any): MyFile {
        data = typeof data === 'object' ? data : {};
        let result = new MyFile();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        for (var property in this) {
            if (this.hasOwnProperty(property))
                data[property] = this[property];
        }
        data["color"] = this.color;
        return data;
    }
}

export interface IMyFile {
    color: MyFileColor;

    [key: string]: any;
}

export type MyFileColor = "red" | "green" | "blue" | "black";